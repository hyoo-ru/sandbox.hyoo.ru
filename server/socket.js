const WebSocket = require('ws');
const fs = require('fs');
const path = require('path');

const port = 9001;

const wss = new WebSocket.Server({ port: port });


function get_dir(_path) {
	return path.join(require.main.filename, '../../../../my/', `/${_path}`)
}

function write(_path, data) {
	fs.writeFileSync(get_dir(_path), data, 'utf-8')
}

wss.on('connection', function connection(ws) {
	ws.on('message', function incoming(message) {
		const parsed = JSON.parse(message);

		if (parsed.tree) {
			let module = parsed.tree.trim().substr(0, parsed.tree.trim().indexOf(' '));
			let module_name = module.substr(module.lastIndexOf('_') + 1);

			if (module.indexOf('my_page') == -1) {
				module_name = 'page';
				const module_new = `$my_page`;
				parsed.tree = parsed.tree.replace(module, module_new);
				module = module_new;
			}

			if (!parsed.ts) {
				parsed.ts = ''
			}
			if (!parsed.css) {
				parsed.css = '';
			}
			if (!parsed.meta) {
				parsed.meta = '';
			}
			if (!fs.existsSync(get_dir(module_name))) {
				fs.mkdirSync(get_dir(module_name));
			}
			write(`${module_name}/${module_name}.view.tree`, parsed.tree);
			write(`${module_name}/${module_name}.view.ts`, parsed.ts);
			write(`${module_name}/${module_name}.view.css`, parsed.css);
			write(`${module_name}/${module_name}.meta.tree`, parsed.meta);
			write(`${module_name}/index.html`, getTemplate(new Date().getTime(), module));
			const execSync = require('child_process').execSync
			if (!fs.existsSync(get_dir(`${module_name}/-`))) {
				let output = execSync(`cd ${path.join(__dirname, '../../../')} && yarn start my/${module_name} `);
			}
			ws.send(JSON.stringify({ ...parsed, module: module_name }));
		}

	});

});


const getTemplate = (time, module_name) => {
	return `
	
	<!-- Disable quirks mode -->
<!DOCTYPE html>
<!-- Allow height:100% in body -->
<html style=" height: 100% ">
	<!-- Force utf-8 encoding -->
	<meta charset="utf-8" />
	<!-- Disable mobile browser auto zoom, $mol is adaptive -->
	<meta
		name="viewport"
		content="width=device-width, height=device-height, initial-scale=1"
	/>
	<!-- link to autogenerated js bundle -->
	<script src="web.js"></script>
	
	<!-- autobind component to element on load -->
	<body mol_view_root="${module_name}"></body>
</html>
	
	`
}
